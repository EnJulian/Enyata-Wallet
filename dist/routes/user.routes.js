"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const user_controller_1 = require("../controllers/user.controller");
const auth_controller_1 = require("../controllers/auth.controller");
const validator_middleware_1 = require("../middlewares/validator.middleware");
const pin_middleware_1 = require("../middlewares/pin.middleware");
const authentication_middleware_1 = require("../middlewares/authentication.middleware");
const validator_middleware_2 = require("../middlewares/validator.middleware");
const filter_controller_1 = require("../controllers/filter.controller");
const filter_controller_2 = require("../controllers/filter.controller");
const wallet_controller_1 = require("../controllers/wallet.controller");
const user_service_1 = require("../services/user.service");
const router = express_1.default.Router();
router.post('/signup', validator_middleware_1.validateUserSignUpInput, user_controller_1.createWalletUser);
router.post('/login', validator_middleware_1.validateLoginInput, user_controller_1.loginWalletUser);
router.post('/forgot-password', auth_controller_1.forgotPassword);
router.post('/reset-password', auth_controller_1.resetPassword);
router.get('/balance', authentication_middleware_1.checkToken, wallet_controller_1.walletBalance);
router.get('/filter', filter_controller_1.getTransactions);
router.get('/search', filter_controller_2.searchUsers);
router.patch('/fund', authentication_middleware_1.checkToken, validator_middleware_2.validateFundWalletFundInputs, wallet_controller_1.fundWallet);
router.patch('/transfer', authentication_middleware_1.checkToken, validator_middleware_2.validateTransferFundsInputs, wallet_controller_1.transferWalletFunds);
router.get('/home', authentication_middleware_1.checkToken, wallet_controller_1.accountSummary);
router.get('/transactions', authentication_middleware_1.checkToken, wallet_controller_1.transactionHistory);
router.post('/createPin', pin_middleware_1.authenticate, user_service_1.createPin);
router.get('/health', (req, res) => res.status(200).json());
exports.default = router;
